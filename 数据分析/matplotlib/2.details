解决matplotlib负号和中文的显示问题

负号问题

    有两种方式： 

    * 在程序中临时配置
        plt.rcParams['axes.unicode_minus'] = False
    * 在配置文件中做永久配置
        matplotlib.matplotlib_fname() 可以显示配置文件的位置
    

中文问题

1. 安装字体
    如果字体文件的后缀名是ttc，有可能无法识別，可以将其改名为ttf后缀

2. 删除 ~/.cache/matplotlib 目录中的字体缓存，或者直接删除该目录

3. 配置matplotlib，有两种方式（通常使用永久配置，临时配置可用于测试效果）： 
    * 在程序中临时配置
        plt.rcParams['font.sans-serif'] = ['WenQuanYi Micro Hei']
    * 在配置文件中做永久配置
        1. 获取配置文件的路径：matplotlib.matplotlib_fname()
        2. 编辑配置文件，在其中添加以下配置项（以文泉译字体为例），或者修改已经存在的配置项

            font.sans-serif     : WenQuanYi Micro Hei

4. 打开新的IPython，测试中文的显示





可以使用这个程序来查看可以被matplotlib使用的中文字体。

# -*- coding: utf-8 -*

from __future__ import print_function
from matplotlib.font_manager import FontManager
import subprocess

fm = FontManager()
mpl_can_see_fonts = set(f.name for f in fm.ttflist)

sys_cmd = 'fc-list :lang=zh -f "%{family}\n"'
sys_zh_fonts = subprocess.check_output(sys_cmd, shell=True).decode('utf8')
zh_font_names = set(f.split(',', 1)[0] for f in sys_zh_fonts.splitlines())

available_fonts = mpl_can_see_fonts & zh_font_names

mark = {'mark': '*' * 10}
print('\n%(mark) smatplotlib 可见的字体 %(mark)s\n' % mark)
print(', '.join(mpl_can_see_fonts))

print('\n%(mark)s 系统可见的中文字体 %(mark)s\n' % mark)
[print(x) for x in zh_font_names]

print('\n%(mark)s matplotlib可用的中文字体 %(mark)s\n' % mark)
[print(x) for x in available_fonts]




查看可用的marker 参数

1. 拿到一条线的对象

    line = ax.lines[0]

2. 在ipython中查看line.set_marker 的帮助信息

    line.set_marker?

    这里没有详细信息，只有提示信息

3. 根据上一步的提示信息找到 matplotlib.markers 的帮助信息

    matplotlib.markers?



散点图的横纵坐标的指定

函数调用方式：

    plt.scatter(X, Y)

其中X，Y 都是阵列，这两个阵列的长度是一样的，比如说：

X = np.array([1, 2, 3, 4])
Y = np.array([7, 8, 9, 10])

那么将会在图中以下坐标上打出4个点

    (1,7), (2,8), (3,9), (4,10)



关于颜色的定义，matplotlib支持多种表示法

1. 颜色的名字或者名字的简写，字符串：
    blue (b)
    green (g)
    red (r)
    cyan (c)
    magenta (m)
    yellow (y)
    black (k)
    white (w)

2. 十六进制表示法，与网页中颜色表示法类似，字符串
    '#FF0000'   <-- red
    '#00FF00'   <-- green
    '#0000FF'   <-- blue
    '#1070AF'   <-- 任意自定义颜色

3. RGB/RGBA，数字型的阵列
    (0.5, 0.5, 0.5)         <-- 常规的RGB颜色表示法
    (0.5, 0.5, 0.5, 0.7)    <-- RGB加上一个alpha通道（不透明度）
    
4. 灰度，小数的字符串
    line.set_color('0')     <-- 黑色
    line.set_color('0.5')   <-- 灰色
    line.set_color('0.7')   <-- 灰色
    line.set_color('1')     <-- 白色



matplotlib 奇怪错误的解决方法

当输错某个参数是，matplotlib可能会出错，后续更正了参数后，错误依旧。

以下命令因为给了错误的参数值：offset point
所以出错，但是matplotlib已经做了一部分的改动了。

In [447]: ax.annotate('Peak', xy=(t,ty), xytext=(-10,-10), xycoords='data', textcoords="offset point", arrowprops=dict(arrowstyle='->', connectionstyle='arc3,rad=0.3'))
Out[447]: <matplotlib.text.Annotation at 0x7fd4d512f860>

In [448]: Traceback (most recent call last):
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/backends/backend_qt5agg.py", line 197, in __draw_idle_agg
    FigureCanvasAgg.draw(self)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/backends/backend_agg.py", line 464, in draw
    self.figure.draw(self.renderer)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/artist.py", line 63, in draw_wrapper
    draw(artist, renderer, *args, **kwargs)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/figure.py", line 1144, in draw
    renderer, self, dsu, self.suppressComposite)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/image.py", line 139, in _draw_list_compositing_images
    a.draw(renderer)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/artist.py", line 63, in draw_wrapper
    draw(artist, renderer, *args, **kwargs)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/axes/_base.py", line 2426, in draw
    mimage._draw_list_compositing_images(renderer, self, dsu)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/image.py", line 139, in _draw_list_compositing_images
    a.draw(renderer)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/artist.py", line 63, in draw_wrapper
    draw(artist, renderer, *args, **kwargs)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/text.py", line 2338, in draw
    self._update_position_xytext(renderer, xy_pixel)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/text.py", line 2222, in _update_position_xytext
    self.set_transform(self._get_xy_transform(renderer, self.anncoords))
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/text.py", line 1856, in _get_xy_transform
    raise ValueError("%s is not a recognized coordinate" % s)
ValueError: offset point is not a recognized coordinate
In [448]:


所然是中途出错，但是标注文本对象已经生成，并被保存起来了：

In [448]: ax.texts
Out[448]: [<matplotlib.text.Annotation at 0x7fd4d512f860>]


因此后续的annotate操作即使参数值写对了，还是会出错：

In [449]: ax.annotate('Peak', xy=(t,ty), xytext=(-10,-10), xycoords='data', textcoords="offset points", arrowprops=dict(arrowstyle='->', connectionstyle='arc3,rad=0.3'))
Out[449]: <matplotlib.text.Annotation at 0x7fd4d512f748>

In [450]: Traceback (most recent call last):
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/backends/backend_qt5agg.py", line 197, in __draw_idle_agg
    FigureCanvasAgg.draw(self)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/backends/backend_agg.py", line 464, in draw
    self.figure.draw(self.renderer)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/artist.py", line 63, in draw_wrapper
    draw(artist, renderer, *args, **kwargs)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/figure.py", line 1144, in draw
    renderer, self, dsu, self.suppressComposite)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/image.py", line 139, in _draw_list_compositing_images
    a.draw(renderer)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/artist.py", line 63, in draw_wrapper
    draw(artist, renderer, *args, **kwargs)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/axes/_base.py", line 2426, in draw
    mimage._draw_list_compositing_images(renderer, self, dsu)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/image.py", line 139, in _draw_list_compositing_images
    a.draw(renderer)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/artist.py", line 63, in draw_wrapper
    draw(artist, renderer, *args, **kwargs)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/text.py", line 2338, in draw
    self._update_position_xytext(renderer, xy_pixel)
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/text.py", line 2222, in _update_position_xytext
    self.set_transform(self._get_xy_transform(renderer, self.anncoords))
  File "/home/joshua/anaconda3/lib/python3.6/site-packages/matplotlib/text.py", line 1856, in _get_xy_transform
    raise ValueError("%s is not a recognized coordinate" % s)
ValueError: offset point is not a recognized coordinate


解决方法：把注解文本对象清除。

In [441]: ax.texts
Out[441]: 
[<matplotlib.text.Annotation at 0x7fd4d46c65f8>,
 <matplotlib.text.Annotation at 0x7fd4d5108fd0>,
 <matplotlib.text.Annotation at 0x7fd4d5127588>,
 <matplotlib.text.Annotation at 0x7fd4d512a780>]



注解文字函数 plt.annotate 参数解释

arrow_settings = dict(arrowstyle='->',
                      connectionstyle='arc3,rad=-0.3',
                      color='g')
ax.annotate('Peak',
            xy=(t,ty),
            xytext=(-70,-30),
            xycoords='data',
            textcoords="offset points",
            arrowprops=arrow_settings,
            fontsize=14,
            color='red')

xy: 注解所解释的目标点的坐标（要注解哪个点？）
xytext: 注解文本的坐标（把注解文本放到哪里？）
xycoords: xy的值的意义
textcoords: 类似xycoords, xytext的值的意义
arrowprops: 用来控制连接文本和目标点的箭头的属性
fontsize: 控制文本字体大小
color: 控制文本的颜色



异常值的计算方法

样本中的以下统计量：

1. 下四分位 25%
2. 上四分位 75%

可以求出上下四分位之间的距离，叫做 IQR (inter-quartile range)

iqr = q3-q1
rng = iqr * 1.5

upper_limit = q3 + rng
lower_limit = q1 - rng

lower_limit <= normal value <= upper_limit
