课程计划

    数据分析概述及环境预备 (0.5)
    Numpy (2)
    Matplotlib (2)
    Pandas (2)
    实践 (1.5)



数据分析概述

了解数据分析学与数据分析的联系与区别 (analytics vs analysis)
了解常见的与数据相关的名词
了解与数据分析相关的常见职位
了解数据分析职位所需的最重要的几种技能



环境部署与使用

安装numpy/matplotlib/pandas/scipy/ipython/jupyter等工具
掌握ipython的常用技巧
掌握jupyter notebook 的常用技巧



----------------------
Numpy的使用
----------------------

了解numpy的功能及用途
能够安装numpy

了解numpy阵列的索引方式 (Python的tuple)
理解numpy的轴(axes)的含义 (维, dimensions)
能够获知一个阵列的维数 (a.ndim)
能够获知一个阵列的形状 (a.shape)
能够获知一个阵列的元素总数 (a.size)
能够获知一个阵列的元素的数据类型 (a.dtype)
能够获知一个阵列的每个元素所佔用的内存大小 (a.itemsize)
能够获知一个阵列的所有元素所佔用的内存大小 (a.nbytes)

能够通过一个Python的嵌套可迭代对象创建numpy阵列 (np.array)
能够创建一个全部元素的值都为零的阵列 (np.zeros)
能够创建一个全部元素的值都为一的阵列 (np.ones)
能够创建一个全部元素的值都为指定值的阵列 (np.full)
能够按指定形状创建阵列，不关心阵列的值 (np.empty)
能够按照已有阵列的形状创建一个新的阵列，并把值初始化为零 (np.zeros_like)
能够按照已有阵列的形状创建一个新的阵列，并把值初始化为一 (np.ones_like)
能够按照已有阵列的形状创建一个新的阵列，不做值的初始化 (np.empty_like)
能够按照已有阵列的形状创建一个新的阵列，并把值初始化为指定值 (np.full_like)
能够创建一个一维阵列，值是一个范围之内的小数 (np.arange)
能够创建一个一维阵列，值是一个范围之内的小数，并确定阵列元素的数量 (np.linspace)
了解用np.linspace创建固定数量元素的阵列时，包含与不包含结束点的区别
能够按照给定的形状创建阵列，用随机数填充，随机数是[0, 1) 范围的均匀分布 (np.random.rand, np.random.uniform)
能够按照给定的形状创建阵列，用随机数填充，随机数符合均值为0方差为1的常态分布 (np.random.randn, np.random.normal)
能够使用其它常见的随机数函数 (randint, shuffle, choice)

了解打印阵列时最后一个轴的打印方向 (从左到右)
了解打印阵列时除了最后一个轴的其它轴的打印方向 (从上到下)
了解打印阵列时空行的使用规律 (从倒数第三个轴开始递增一个空行)
了解打印阵列时省略部分数据的条件 (元素总数超过一定数量)
能够设置打印阵列时不省略数据 (np.set_printoptions, threshold)

了解numpy做算数操作时在元素级别操作
能够用numpy做基本的算数运算 (+,-,*,/,//,**,%, +=, -=, ...)
了解numpy在计算中自动数据类型转换的规律 (把小的转成大的)
能够使用np.sum/max/min/mean/median，并理解axis参数的行为

掌握常见的通用函数的使用:all,any,ceil,cumsum,diff,floor,max,maximum,mean,median,min,minimum,sort,std,sum,transpose,var,where

能够对一维阵列做索引、切片、迭代等操作 (类似python的列表)
了解多维阵列的每一个轴都可以有一个索引，多个索引值组合成一个tuple作为索引
了解当提供的索引少于轴的数量时，缺少的索引被推定为冒号:
能够用省略号 ... 来代替多个用冒号来表示的轴，一个中括号中只能有一个省略号的形式
能够迭代多维阵列 (相当於迭代阵列的0轴的元素)
能够迭代阵列的所有元素 (flat属性)

能够由现有阵列生成一个连续的扁平的一维阵列 (np.ravel)
能够由现有阵列生成一个连续的扁平的一维阵列副本 (ndarray.flatten)
能够由现有阵列按照新的形状生成新的阵列 (np.reshape)
能够在改变阵列形状时自动设定未知的轴的长度 (np.reshape, -1)
能够改变阵列的尺寸 (ndarray.resize, np.resize)
能够对阵列做转置操作 (ndarray.T, ndarray.transpose)
能够用np.newaxis给阵列添加新的轴 (相当于None, 1D->ND, 可用于broadcasting)

能够垂直堆叠阵列 (vstack/row_stack)
能够水平堆叠阵列 (hstack/column_stack)
能够纵深堆叠阵列 (dstack)
能够把多个阵列按照已经存在的某个轴串接起来 (np.concatenate)
能够把多个阵列指定的新轴整体串接起来 (np.stack)

能够把阵列按照某个轴平均地切分开 ( np.split(a, 3) )
能够把阵列按照某个轴上的某些点切分开 ( np.split(a, [3,5,7]) )
能够把阵列按照某个轴近似平均地切分开 ( np.array_split(a, 3) )
掌握垂直切分阵列的简便函数的使用 (vsplit <> np.split with axis=0)
掌握水平切分阵列的简便函数的使用 (hsplit <> np.split with axis=1)
掌握纵深切分阵列的简便函数的使用 (dsplit <> np.split with axis=2)

了解做Python变量赋值时不会复制阵列数据
了解做Python函数调用时不会复制阵列数据

了解不同的阵列对象可以共用相同的数据
理解视图是阵列的浅副本(shallow copy)，视图也是阵列
能够通过ndarray.view生成阵列的视图
了解阵列ndarray.base是视图所引用的带数据的阵列
理解视图和所引用的阵列之间有各自独立的形状
了解对阵列做切片将生成视图
了解np.ravel生成深副本或浅副本的时机
能够检测对象是不是视图 (a.flags, a.base)

能够通过ndarray.copy生成阵列的深副本（完整的副本，包括阵列及数据）
了解阵列的深副本与原阵列不共享任何信息
了解ndarray.flatten与ndarray.ravel 的区别 (深副本 vs 浅副本)

了解numpy做两个阵列的操作时通常是拿对应位置上的元素做计算 (要求形状相同)
了解numpy对两个阵列做算术运算时使用广播规则的时机 (形状不同时)
理解广播所需的条件 (两个阵列尾部对应轴的长度要么相等要么其中一个为一)
理解numpy广播的行为 (拉伸短的轴使之与另一个阵列对应轴的长度相等)

了解索引中阵列在切片前面时所生成的是深副本 (对比a[:2,[0,1]] 和 a[[0,1],:2])
了解索引所用的阵列必须是整数类型
理解索引阵列的元素的值的意义 (索引阵列的元素的值表示被索引阵列中元素的位置)
理解索引阵列的形状的意义 (决定结果的一部分形状)
理解用阵列来索引时结果的形状的确定 (索引阵列的形状串接上未指明的剩余的轴的形状)

# 能够用一个索引阵列来索引 (对被索引阵列的0轴进行索引，多维阵列算为一个阵列)
# 能够用多个索引阵列来索引 (各阵列的形状必须相同，不同时将尝试广播)
# 能够用数字与切片/索引阵列混合索引 (数字靠前和靠后的作用不同)
# 能够用python列表来索引阵列 (列表被转换成阵列)
# 了解能用在中括号中的索引的类型 (整数、切片、省略号、np.newaxis, None)
# 能够用布尔阵列来索引 (形状必须与被索引的阵列前面的轴组成的形状相同)
# 能够给被索引阵列赋值 (值与索引结果形状要兼容)

能够创建结构化阵列的数据类型
能够创建结构化阵列
能够获取结构化阵列的记录和列
能够修改结构化阵列的数据
能够用结构化阵列存放二维表格数据

能够把一个阵列保存到外部二进制文件中 (np.save)
能够把多个阵列保存到外部二进制文件中 (np.savez)
能够把多个阵列保存到外部文本文件中 (np.savetxt)
能够从外部二进制文件导入一个阵列 (np.load)
能够从外部二进制文件导入多个阵列 (np.load)
能够从外部文本文件导入一个阵列 (np.loadtxt, np.genfromtxt)
