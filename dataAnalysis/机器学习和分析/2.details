描述性数据分析 (descriptive analytics) 提供了对“过去”的洞察(insight)，回答的问题是“发生了什么”。当需要在一个概括的层面看事物的过去和现状时，可以使用描述性数据分析。

预测性数据分析 (predictive analytics) 使用统计模型预测技术来描述“将来”，回答的问题是“可能会发生什么”。当需要了解事物将来的状况（发展趋势），或者填补缺失的信息时，可以使用预测性数据分析。

规范性数据分析 (prescriptive analytics) 对“将来”提供了可能的结果，回答的问题是“应该做什么”。规范性数据分析相对比较复杂，大多数的公司并没有在日常业务中使用。




机器学习理论

1. 什么是机器学习

    属于AI的范畴，是一种用于构建数据模型的方法。
    模型中有些可调的参数，这些参数可以根据训练数据作出调整，这个调整的过程就是“学习”的过程。

2. 机器学习的分类

    有监督学习 (supervised learning, 提供了标签)
        分类（classification, 标签是离散的分类）
            高斯朴素贝叶斯 (naive bayes)
            支持向量机 (support vector machine)
            随机森林分类 (random forest classification)
        回归（regression, 标签是连续的数量）
            线性回归 (liner regression)
            支持向量机 (support vector machine)
            随机森林回归 (random forest regression)

    无监督学习 (unsupervised learning, 不提供标签)
        聚类 (clustering，推断出标签)
            k-means
            高斯混合模型 (gaussian mixture models)
        降维 (dimensionality reduction)
            主成分分析 (PCA: principal components analysis)
            流行学习 (manifold learning)

    半监督学习：可用的标签不完整








Python下的机器学习库 Scikit-Learn



** 数据的表示方法 (数据表: table of data)

特征矩阵 (features matrix)
Scikit-Learn 要求输入数据是一个二维阵列，形状是[n_samples, n_features]，这个阵列被称为“特征矩阵”，通常用numpy阵列或者pandas的DataFrame来存放，按照约定，变量名一般叫做X。

特征矩阵中的Sample可以表示一朵花，一个人，一个文档，一个音频，一个视频，或者是任何可以用量化的尺度来表示的事物。Feature是用来描述Sample的量化表示，通常是小数，但也可以是布尔值或离散值。

目标阵列 (target array)
除了特征矩阵，通常还会使用一个标签阵列或目标阵列，按照约定，这个数据用变量y 来表示。目标阵列通常是一维的，长度为 n_samples，一般用numpy阵列或pandas的Series来存放。目标阵列所存放的值可以是连续的数字类值，也可以是离散的标签类值

目标阵列与特征矩阵之间的关系，或者说目标阵列与特征矩阵中的特征之间有什么区别？通常，目标阵列中的值，就是我们希望通过数据“预测”出来的值。在统计学上叫做“应变量”，是一种输出。



** 估计器 (estimator) API

Scikit-Learn估计器API接口非常一致，掌握了基本的使用原则后，使用Scikit-Learn将是非常容易的事情。

大多数情况下，使用Scikit-Learn估计器API的步骤如下：

1. 选择模型的类型，并从Scikit-Learn中导入相应的类对象
2. 通过实例化模型的类创建模型实例，并设置超参数 (hyperparameters)
3. 按照特征矩阵和目标阵列的格式要求预备数据
4. 通过调用模型实例的fit()方法，用预备好的数据训练模型
5. 将训练好的模型应用于新的数据
    1. 对于有监督学习，通常通过模型的predict()方法从位置数据中预测标签
    2. 对于无监督学习，通常用predict()或transform()方法来推测或转换数据的属性
