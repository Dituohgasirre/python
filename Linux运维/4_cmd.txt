根目录架构
    bin         保存系统普通外部命令源文件(可执行文件)   *
    sbin        保存系统管理命令对应的可执行文件         *
    usr         保存用户安装软件的相关目录               *
    lib         保存跨平台系统库文件目录(*.so/*.a)       *
    lib64       保存64位平台库文件目录                   *

    etc         保存操作系统配置文件的目录               *
    boot        保存操作系统启动相关文件的目录           *
    vmlinuz     软链接到内核文件
    initrd.img  软链接到临时文件系统文件

    dev         保存设备文件的目录(内核自动生成)         *
    proc        保存进程和内核运行状态信息的目录(内核自动生成) *
    sys         保存设备模型相关的目录(内核自动生成)     *
    tmp         临时存储目录(内存)                       *

    home        保存普通用户家目录的目录
    root        超级管理员用户的家目录

    lost+found  ext4文件系统格式自动产生的目录, 保存ext4文件系统格式日志信息

    media       用于自动挂载U盘的目录
    mnt         用于自定义挂载的目录
    cdrom       用于自动挂载光驱的目录

    var         保存系统日志
    srv         保存服务的家目录
    run         保存服务正在运行的临时文件目录

    opt         作为第三方软件安装目录

linux的特点:
    一切皆于文件
    没有输出代表正确

-------------------------------------------------------------------------------
计算机命名规则:
    严格区别大小写
    数字 大小写字母 特殊字符组合
    尽量少用特殊字符(除下划线和减号外)
    数字和特殊字符不能开头(下划线除外)
    尽量使用英文前缀命名

    驼峰命名法:
        小写开头驼峰命名: zhuLong
        大写开头驼峰命名: ZhuLong

    unix命名法(全小写或全大写):
        zhu_long


命令格式和分类
    shell(人机交互)程序:
        文本    window:cmd  linux:csh bash zsh
        图形    windows X-Window

    linux默认命令解析器: bash

    命令的格式
        所有英文书写必须使用半角(宽字符: 光标移上去显示两个位置)
        命令和参数严格区分大小写

        命令使用语法: 命令名 参数1 参数2 ... 参数n
            命令名与参数之间分隔符为空格(自动处理重复分隔符)
            参数之间分隔符为空格(自动处理重复分隔符)

            []      可有可无
            ...     前面内容可以有多个(不限个数)
            |       多选一

        命令的参数
            处理参数里带空格字符问题: 使用双引号或单引号来解决

            命令参数的分类:
                选项    以-或--开头的参数, 控制命令的功能
                    长选项  --
                        可读性高, --后跟单词
                    短选项  -
                        便捷性高, -后跟单个字符, 如果跟多个字符代表多个短选项

                    选项值
                        无值选项  -l / --list
                        有值选项  -t utf8 / --to=utf8
                        可选值选项 --color=auto / --color

                普通参数(多为路径)  命令处理的源

    命令的分类
        内部命令    内置于shell程序的命令
        外部命令    独立于shell程序的可执行文件

        区分内部和外部命令:
            type 命令: 显示内建信息为内部命令

            which 命令: 有路径打印代表是外部命令

-------------------------------------------------------------------------------
基本操作命令
    帮助命令
        内部命令的帮助信息:
            help 内部命令
            man bash    获取Shell解析器的帮助信息(内部命令)

        外部命令的帮助信息: man [1-8] 外部命令
            [1-8]:  代表帮助信息章节
                1   普通命令的帮助信息
                2   系统调用的帮助信息(C/C++编程)
                3   标准库帮助信息(C/C++)
                5   系统配置文件帮助信息
                8   系统管理员命令的帮助

    目录操作命令
        创建            mkdir
            ..      上一级目录(创建目录自动生成)
            .       当前目录(创建目录自动生成)
            ~       代表家目录

            获取当前路径: pwd
            切换工作路径: cd
                切换指定路径: cd 路径
                切换当前登录用户的家目录:
                    cd
                    cd ~
                返回当前目录的上一级: cd ..
                返回上一次所在目录: cd -

            在当前目录下创建一个目录:
                mkdir kyo

            指定目录下创建目录:
                mkdir /tmp/test/kyo

            在指定多个路径下创建指定的目录:
                mkdir kyo /tmp/test/abc ./test/abc

            创建目录树(路径中不存在的目录自动会创建):
                mkdir /tmp/test/kyo/abc/xyz -p

            创建100个目录:
                mkdir {1..100}

        删除            rmdir/rm -r
            rmdir 目录路径  只能删除空目录
            rm -r 目录路径  删除整个目录(慎用)

        复制            cp -r
            cp -r 源路径... 目标路径
                源路径:
                    必须是存在的路径
                    以空格为分隔符可以支持源路径复制

                目标路径:
                    目标路径是目录: 把源目录复制此目录里去
                    目标路径最后一级是不存在路径: 把源目录重命名此路径目录

                复制一个文件: 目标没有限制
                复制一个目录: 目标路径必须存在的目录或不存在路径
                复制多个文件和目录: 目标必须是存在的目录

            选项:
                -r      复制目录
                -i      提示是否覆盖, 默认直接覆盖
                -u      更新, 比对时间,源文件比目标文件的时间新才会覆盖
                -v      显示复制进度
                -t      指定目标路径(应用复制多个文件或目录的场景)

        剪切/重命名     mv
            mv 源路径 目标路径

        查看目录信息    ls -ld
        遍历目录        ls/ls -l
        修改属性        chmod/chown/touch

    文件操作命令
        创建            touch/vim
        删除            rm
        编辑            vim
        复制            cp
        剪切/重命名     mv
        查看文件信息    ls -l/file
            file        查看文件类型信息(文件后缀只是为可读性)
        修改属性        chmod/chown/touch

    ls命令
        -l      列表文件详细信息
        -a      显示所有文件, 包含隐藏文件
            隐藏文件: 以点开头的文件为隐藏文件
        -d      显示目录详细信息
        -R      递归显示目录里详细信息(显示目录里所有文件信息)
        -h      将文件大小加单位(K M G T P)

        ls -l文件详细信息:
            -rwxr-xr-x 1 kyo kyo      3617 Oct 26 17:06 0_env.txt

            -rwxr-xr-x          文件类型和权限
                第一个字符代表文件类型
                    -       普通文件 (文本文件/二进制文件)
                    d       目录
                    l       软链接文件
                    c       字符设备文件
                    b       块设备文件
                    s       套接字文件
                    p       管道文件

                后九个字符代表文件权限
                    rwxr-xr-x

            1                   文件硬链接数
            kyo                 文件所属用户
            kyo                 文件所属用户组
            3617                文件大小, 默认单位为字节
            Oct 26 17:06        文件最后修改时间
            0_env.txt           文件名

    文件阅读命令
        cat     直接将文本文件内容输出到终端
            cat 1.txt       显示文件内容
            cat -n 1.txt    显示行号输出文件

        less    支持更多操作在终端查看文件内容

        head    查看文件头多少行
            head -n 1   查看头1行内容

        tail    查看文件尾多少行

-------------------------------------------------------------------------------
    重定向 > < >> << <<< 1> 2> &>
        标准输入    stdin       0
            默认情况下问终端要
        标准输出    stdout      1
        错误输出    stderr      2
            默认情况下输出到终端

        输出重定向  > >> 1> 2> &> 1>> 2>> &>>
            > / 1>   将命令标准输出重定向到目标(文件路径)
            >> / 1>> 将命令标准输出追加到目标
            2>       将命令错误输出重定向到目标
            2>>      将命令错误输出追加到目标
            &        将命令所有输出重定向到目标

            空洞文件: /dev/null
                将命令的所有输出重定向到空洞文件

        输入重定向 < << <<<
            <       将输入重定向到文件
            <<      将输入重定向结束标识符
            <<<     将输入重定向到字符串

    管道命令 |
        将|前面命令的标准输出作为|后面命令标准输入

        例:
            带行号的less: cat -n 1_linux.txt | less
            打印文件第8行: cat -n r | head -n 8 | tail -n 1

-------------------------------------------------------------------------------
用户管理
    超级管理员用户(系统自带, 用于管理其它用户)  root    UID == 0
    系统用户(服务自带, 服务权限的标识)                  0 < UID < 1000
    普通用户(人类使用 系统登录使用)                     UID >= 1000

    用户是使用UID来做标识

    查看当前用户ID信息: id
    查看指定用户ID信息: id root

    用户相关配置文件:
        /etc/passwd         用户信息
        /etc/shadow         用户密码信息
        /etc/group          组信息
        /etc/gshadow        组密码信息

    用户管理(必须超级管理员用户)
        添加
            useradd     用于编程
            adduser     用于交互

        删除
            userdel
                连带用户数据删除
                    userdel -r tom

            deluser
                将整个文件系统所属tom的文件或目录删除
                    deluser tom --remove-all-files

        修改
            usermod
            passwd

        查看(配置文件)
            id

        切换用户
            su

    用户组管理(必须超级管理员用户)
        groupadd    添加组
        groupdel    删除组
        groupmod    修改组
        groups      查看当前登录用户所属组

        修改用户的附加组
            usermod -G 附加组,... 用户名
            例:
                usermod -G sudo,root,zl,adm kyo

    sudo(授权)
        当运行系统管理命令时使用sudo, 临时授权使用, 避免误操作
        sudo只能运行外部命令, 依赖/etc/sudoers文件里secure_path变量的路径

        给普通用户sudo授权(超级管理员用户给普通用户授权):
            usermod -G sudo 普通用户名

-------------------------------------------------------------------------------
权限
    查看权限
        ls -l 文件路径
            -rw-r--r-- 1 root root 2463 3月   2 16:27 /etc/passwd
            -rw-r--r--　为文件类型和权限
                第一个字符为文件类型
                后九个字符为权限
                    rw-     用户所属权限        u
                    r--     用户组所属权限      g
                    r--     其它用户所属权限    o

                -       占位, 没有意义
                r       读
                    文件, 没有r权限代表没有读权限, 不能查看文件内容
                    目录, 没有r权限代表没有列表目录的权限, 即不能ls此目录

                w       写
                    文件, 没有w权限代表没有写权限, 不能修改文件
                    目录, 没有w权限代表没有对此目录没有操作权限, 即不能对此目录的文件删除及在此目录新建文件

                x       执行
                    文件, 没有x权限代表没有执行权限, 不能运行可执行文件
                    目录, 没有x权限代表不能cd进此目录

        权限数字表示
            ---     000     0
            --x     001     1
            -w-     010     2
            -wx     011     3
            r--     100     4
            r-x     101     5
            rw-     110     6
            rwx     111     7

            755 ==> rwxr-xr-x

    修改权限
        chmod u=--- file
        chmod u=rx-,g=rw- file
        chmod +x file
        chmod u-x file
        chmod g+w file

        所有用户都增加rw权限
            chmod a+rw file

        所有用户都增加rw权限(其它用户不会增加w权限)
            chmod +rw file

        chmod 660 file
        chmod 777 file
        chmod 0 file

        将目录下所有文件都修改权限
            chmod 0660 /tmp/ -R

    修改所属用户及组
        chown 用户名:用户组 文件路径

        chown kyo:kyo file
        chown zl:kyo dir
        当前登录用户作为文件的所属用户及组
            chown $USER:$USER file

        修改目录及目录下子文件的权限
            chown zl:zl dir/ -R

    粘贴位
        只针对目录的其它用户设置, 保存文件不会被其它用户修改和删除(文件夹所属用户除外)

        chmod o+t dir

    umask           创建文件权限掩码
        文件默认权限为0666, 文件夹默认权限为0777
        设置文件创建权限掩码, 改变创建文件默认权限(默认权限 & ~掩码)
            0666 & ~0002 = 0664
            110 110 110
            111 111 101
            110 110 100

        umask       查看当前用户的权限掩码
        umask 0077  修改当前用户的权限掩码(临时)
            如果需要永久设置权限掩码, 将umask设置放到~/.bashrc中

    特权位(setuid/setgid)
        针对(ELF)可执行文件设置, 修改可执行文件的执行权限

        执行可执行文件时执行权限默认为当前登录用户
        加了特权位后, 可执行文件的执行权限变成可执行文件的所属用户的权限

        用户特权
            chmod u+s /bin/ls

        组特权
            sudo chmod g+s /bin/ls

        针对文件夹设置特权位, 设置组特权才有意义(文件夹里创建的文件默认所属用户组与文件夹的用户组一致)

    特殊属性
        lsattr  查看文件的特殊属性
            lsattr file

        chattr  修改文件的特殊属性
            chattr +i file
            chattr -i file

-------------------------------------------------------------------------------
在线用户
    显示在线用户信息
        users   只显示在线用户名
        who     显示在线用户及设备信息
        w       更详细在线用户信息

    last        显示登录成功日志信息(/var/log/wtmp)
    lastb       显示登录失败日志信息(/var/log/btmp)
    lastlog     显示每个用户的最后一次登录信息(/var/log/lastlog)

消息命令
    wall        广播消息命令
        所有本机终端都能接受到广播消息
            wall "广播信息"

    mesg y|n    开关广播消息

    write       给指定终端发送信息
        write "消息" 终端设备

-------------------------------------------------------------------------------
系统基本命令
    file            查看文件类型

    uname           查看系统基本信息
        uname -a    查看系统所有信息

    cal             查看日历
        cal         查看当月日历
        cal 2018    查看2018年的日历
        cal 3 2018  查看2018年3月的日历

    date            查看日期时间
        date +"%Y-%m-%d %H:%M:%S"   指定日期输出格式显示当前日期时间
        date -d "+1 day 2018-10-10" +"%F"   日期计算

    echo            输出命令
        -n          去除换行
        -e          解析特殊字符

    eog             图片浏览器(Ubuntu)
    xviewer         Mint系统图片浏览器

    wget            下载工具

    curl            爬虫工具

    bc              计算器

    tar             打包压缩解压工具

    iptables        防火墙设置命令

    ifconfig/ip     设置网卡信息

