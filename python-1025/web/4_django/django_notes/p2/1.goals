# 了解设置项目所使用的数据库的位置
# 能够修改SQLite数据库文件的位置 (p1)
# 能够使用mysql作为项目的数据库 (p2)
# 理解数据库设定中TIME_ZONE的作用 (p3)
# 能够创建带有时区信息的时间 (p4)
# 了解Django对多数据库的支持 (DATABASE_ROUTERS)
# 能够为应用的模型创建数据表 (migrate)
# 能够创建数据模型 (django.db.models.Model)
# 能够把应用安装到项目上 (INSTALLED_APPS)
# 能够把应用的模型应用到数据库 (makemigrations, migrate)
# 能够查看某个migration 对应的SQL语句 (sqlmigrate)
# 了解从模型到数据库分为两个步骤的原因 (version control, git, svn)
# 掌握修改模型的标准三步 (change, makemigrations, migrate, p6)
能够在交互式环境使用Django的模型API (shell, django.setup)
    # 能够创建模型记录
    # 能够删除模型记录
    # 能够更改模型记录
    # 能够获取一组符合条件的记录 (all, filter, exclude)
    # 能够获取一条符合条件的记录 (get,p7)

    # 能够限定记录集的最大数量 (p8)
    # 能够对结果排序 (p9)
    # 能够按照字段的值过滤查询结果 (p10,p23)
    # 能够对查询结果做统计操作 (p11)
    # 能够用OR条件做查询 (p12)
    # 能够使用原始的SQL (p13)

# 能够调整模型的实例对象在交互式环境的显示 (__str__, p14)

# 了解model 的主键的确定方法 (id, pk，p15)
# 理解多对一关系 (father and children)
# 能够创建多对一关系
# 能够通过多对一关系获取关联的记录
# 了解多对一关系中删除操作的影响 (p16)

# 理解多对多关系 (tags and articles)
# 能够创建多对多关系
# 能够通过多对多关系获取关联的记录
# 了解多对多关系中删除操作的影响 (p17)

# 理解一对一关系 (public and private keys)
# 能够创建一对一关系
# 能够通过一对一关系获取关联的记录
# 了解一对一关系中删除操作的影响 (p18)

# 了解定义模型时default 和 null 参数的作用 (p19)
# 掌握指定关联记录的方法 (对象或者对象的主键)
# 掌握DateTimeField 的使用 (时区，auto_now, auto_now_add，p20)

# 了解Django 项目的settings 模块的用法 (django.conf.settings)
# 能够在非Django 程序中使用Django 的数据库 (p21)

# 能够设置启用Django项目的管理后台 (INSTALLED_APPS, url, user)
# 能够通过Django项目的管理后台管理模型的数据 (admin.site.register, p22)
